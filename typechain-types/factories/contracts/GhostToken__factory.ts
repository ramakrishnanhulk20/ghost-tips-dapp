/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  GhostToken,
  GhostTokenInterface,
} from "../../contracts/GhostToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "ebool",
        name: "success",
        type: "bytes32",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "plaintextBalanceOf",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "tokenAmount",
        type: "uint64",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c0604052600b60809081526a23b437b9ba102a37b5b2b760a91b60a0526000906200002c90826200029e565b5060408051808201909152600581526411d213d4d560da1b60208201526001906200005890826200029e565b506002805460ff191660121790553480156200007357600080fd5b50620001f162000115604080516080810182526000808252602082018190529181018290526060810191909152506040805160808101825273687820221192c5b662b25367f70076a37bc79b6c815273848b0066793bcc60346da1f49049357399b8d595602082015273a02cda4ca3a71d7c46997716f4283aa851c2881291810191909152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac606082015290565b80517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970080546001600160a01b03199081166001600160a01b039384161790915560208301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497018054831691841691909117905560408301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497028054831691841691909117905560608301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497038054909216921691909117905550565b6200036a565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200022257607f821691505b6020821081036200024357634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000299576000816000526020600020601f850160051c81016020861015620002745750805b601f850160051c820191505b81811015620002955782815560010162000280565b5050505b505050565b81516001600160401b03811115620002ba57620002ba620001f7565b620002d281620002cb84546200020d565b8462000249565b602080601f8311600181146200030a5760008415620002f15750858301515b600019600386901b1c1916600185901b17855562000295565b600085815260208120601f198616915b828110156200033b578886015182559484019460019091019084016200031a565b50858210156200035a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611a0e806200037a6000396000f3fe6080604052600436106100c05760003560e01c806370a0823111610074578063d0e30db01161004e578063d0e30db01461020e578063da1f12ab14610216578063ddcb12af1461022b57600080fd5b806370a0823114610193578063750f0acc146101d757806395d89b41146101f957600080fd5b80632ea0dfe1116100a55780632ea0dfe114610127578063313ce567146101475780635d359fbd1461017357600080fd5b806306fdde03146100cc5780631086a9aa146100f757600080fd5b366100c757005b600080fd5b3480156100d857600080fd5b506100e1610284565b6040516100ee919061178c565b60405180910390f35b34801561010357600080fd5b5061011761011236600461180f565b610312565b60405190151581526020016100ee565b34801561013357600080fd5b50610117610142366004611842565b610423565b34801561015357600080fd5b506002546101619060ff1681565b60405160ff90911681526020016100ee565b34801561017f57600080fd5b5061011761018e36600461180f565b6108e2565b34801561019f57600080fd5b506101c96101ae366004611885565b6001600160a01b031660009081526003602052604090205490565b6040519081526020016100ee565b3480156101e357600080fd5b506101f76101f23660046118a0565b610c03565b005b34801561020557600080fd5b506100e1610ebc565b6101f7610ec9565b34801561022257600080fd5b506127116101c9565b34801561023757600080fd5b5061026b610246366004611885565b6001600160a01b031660009081526006602052604090205467ffffffffffffffff1690565b60405167ffffffffffffffff90911681526020016100ee565b60008054610291906118bb565b80601f01602080910402602001604051908101604052809291908181526020018280546102bd906118bb565b801561030a5780601f106102df5761010080835404028352916020019161030a565b820191906000526020600020905b8154815290600101906020018083116102ed57829003601f168201915b505050505081565b60006001600160a01b03831661036f5760405162461bcd60e51b815260206004820152600f60248201527f496e76616c6964207370656e646572000000000000000000000000000000000060448201526064015b60405180910390fd5b600061037a83611029565b3360009081526004602090815260408083206001600160a01b0389168452909152902081905590506103ab81611040565b506103b68130611050565b506103c18133611050565b506103cc8185611050565b5060405167ffffffffffffffff841681526001600160a01b0385169033907f16304dfea7f3fbabcf59225f0629cb307fecb8d5652b069080aa9be2c765d7d29060200160405180910390a360019150505b92915050565b6000808267ffffffffffffffff161161047e5760405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f7369746976650000000000000000006044820152606401610366565b6001600160a01b0383166104d45760405162461bcd60e51b815260206004820152601160248201527f496e76616c696420726563697069656e740000000000000000000000000000006044820152606401610366565b6001600160a01b03841661052a5760405162461bcd60e51b815260206004820152600e60248201527f496e76616c69642073656e6465720000000000000000000000000000000000006044820152606401610366565b6001600160a01b03841660009081526006602052604090205467ffffffffffffffff8084169116101561059f5760405162461bcd60e51b815260206004820152601460248201527f496e73756666696369656e742062616c616e63650000000000000000000000006044820152606401610366565b6105a884611063565b6105b183611063565b60006105bc83611029565b6001600160a01b0386166000908152600360209081526040808320546004835281842033855290925290912054919250906105f682611040565b5061060081611040565b50600061060d8385611121565b9050600061061b8386611121565b90506000610629838361115a565b905060006106418261063b888a61118c565b886111be565b6001600160a01b038b166000908152600360205260408120549192509061068c90849061066e908b6111d3565b6001600160a01b038e166000908152600360205260409020546111be565b905060006106a48461069e898c61118c565b896111be565b905082600360008f6001600160a01b03166001600160a01b031681526020019081526020016000208190555081600360008e6001600160a01b03166001600160a01b031681526020019081526020016000208190555080600460008f6001600160a01b03166001600160a01b031681526020019081526020016000206000336001600160a01b03166001600160a01b03168152602001908152602001600020819055508a600660008f6001600160a01b03166001600160a01b0316815260200190815260200160002060008282829054906101000a900467ffffffffffffffff1661078f919061190b565b82546101009290920a67ffffffffffffffff8181021990931691831602179091556001600160a01b038e16600090815260066020526040812080548f945090926107db91859116611933565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555061080a83611040565b5061081482611040565b5061081e81611040565b506108298330611050565b50610834838e611050565b5061083f8230611050565b5061084a828d611050565b506108558130611050565b50610860818e611050565b5061086b8133611050565b50610876848e611050565b506108818433611050565b508b6001600160a01b03168d6001600160a01b03167f8d61cf26ce654b1352bb60df9f3d4056b9e85a63977debf8fc9cd727aeda767e866040516108c791815260200190565b60405180910390a35060019c9b505050505050505050505050565b6000808267ffffffffffffffff161161093d5760405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f7369746976650000000000000000006044820152606401610366565b6001600160a01b0383166109935760405162461bcd60e51b815260206004820152601160248201527f496e76616c696420726563697069656e740000000000000000000000000000006044820152606401610366565b3360009081526006602052604090205467ffffffffffffffff808416911610156109ff5760405162461bcd60e51b815260206004820152601460248201527f496e73756666696369656e742062616c616e63650000000000000000000000006044820152606401610366565b610a0833611063565b610a1183611063565b6000610a1c83611029565b33600090815260036020526040902054909150610a3881611040565b506000610a458284611121565b90506000610a5d82610a57858761118c565b856111be565b6001600160a01b03881660009081526003602052604081205491925090610aa8908490610a8a90886111d3565b6001600160a01b038b166000908152600360205260409020546111be565b3360008181526003602090815260408083208790556001600160a01b038d1683528083208590559282526006905290812080549293508992909190610af890849067ffffffffffffffff1661190b565b82546101009290920a67ffffffffffffffff8181021990931691831602179091556001600160a01b038a16600090815260066020526040812080548b94509092610b4491859116611933565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550610b7382611040565b50610b7d81611040565b50610b888230611050565b50610b938233611050565b50610b9e8130611050565b50610ba98189611050565b50610bb48333611050565b506040518381526001600160a01b0389169033907f8d61cf26ce654b1352bb60df9f3d4056b9e85a63977debf8fc9cd727aeda767e9060200160405180910390a3506001979650505050505050565b60008167ffffffffffffffff1611610c5d5760405162461bcd60e51b815260206004820152601d60248201527f4d75737420776974686472617720706f73697469766520616d6f756e740000006044820152606401610366565b3360009081526006602052604090205467ffffffffffffffff80831691161015610cc95760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e7420746f6b656e2062616c616e63650000000000006044820152606401610366565b610cd233611063565b60006103e8610cf367ffffffffffffffff8416670de0b6b3a7640000611954565b610cfd919061196b565b905080471015610d755760405162461bcd60e51b815260206004820152602160248201527f496e73756666696369656e7420636f6e7472616374204554482062616c616e6360448201527f65000000000000000000000000000000000000000000000000000000000000006064820152608401610366565b6000610d8083611029565b33600090815260036020526040902054909150610d9c81611040565b506000610da98284611121565b90506000610dbb82610a57858761118c565b3360009081526003602090815260408083208490556006909152812080549293508892909190610df690849067ffffffffffffffff1661190b565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550610e2581611040565b50610e308130611050565b50610e3b8133611050565b50610e468233611050565b50604051339086156108fc029087906000818181858888f19350505050158015610e74573d6000803e3d6000fd5b5060405167ffffffffffffffff8716815233907f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b659060200160405180910390a2505050505050565b60018054610291906118bb565b60003411610f195760405162461bcd60e51b815260206004820152600d60248201527f4d7573742073656e6420455448000000000000000000000000000000000000006044820152606401610366565b610f2233611063565b6000670de0b6b3a7640000610f39346103e8611954565b610f43919061196b565b90506000610f5082611029565b3360009081526003602052604081205491925090610f6e90836111d3565b3360009081526003602090815260408083208490556006909152812080549293508592909190610fa990849067ffffffffffffffff16611933565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550610fd881611040565b50610fe38130611050565b50610fee8133611050565b5060405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a2505050565b600061041d8267ffffffffffffffff166005611205565b600061104c82306112d7565b5090565b600061105c83836112d7565b5090919050565b6001600160a01b03811660009081526005602052604090205460ff1661111e5761108d6000611029565b6001600160a01b03821660009081526003602052604090208190556110b190611040565b506001600160a01b0381166000908152600360205260409020546110d59030611050565b506001600160a01b0381166000908152600360205260409020546110f99082611050565b506001600160a01b0381166000908152600560205260409020805460ff191660011790555b50565b600082611135576111326000611029565b92505b81611147576111446000611029565b91505b6111538383600061137f565b9392505050565b60008261116e5761116b6000611480565b92505b816111805761117d6000611480565b91505b6111538383600061149e565b6000826111a05761119d6000611029565b92505b816111b2576111af6000611029565b91505b61115383836000611556565b60006111cb84848461160e565b949350505050565b6000826111e7576111e46000611029565b92505b816111f9576111f66000611029565b91505b611153838360006116d4565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649701546040517f9cd07acb0000000000000000000000000000000000000000000000000000000081526000917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b0390911690639cd07acb90611294908790879060040161198d565b6020604051808303816000875af11580156112b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111cb91906119bf565b60007f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970080546040517fb9496b62000000000000000000000000000000000000000000000000000000008152600481018690526001600160a01b03858116602483015292935091169063b9496b6290604401600060405180830381600087803b15801561136257600080fd5b505af1158015611376573d6000803e3d6000fd5b50505050505050565b60008082156113935750600160f81b611397565b5060005b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649701546040517f1391547f00000000000000000000000000000000000000000000000000000000815260048101879052602481018690526001600160f81b0319831660448201527f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b031690631391547f906064015b6020604051808303816000875af1158015611452573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061147691906119bf565b9695505050505050565b600061041d82611491576000611494565b60015b60ff166000611205565b60008082156114b25750600160f81b6114b6565b5060005b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649701546040517fd99882d500000000000000000000000000000000000000000000000000000000815260048101879052602481018690526001600160f81b0319831660448201527f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b03169063d99882d590606401611433565b600080821561156a5750600160f81b61156e565b5060005b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649701546040517f182b6d9800000000000000000000000000000000000000000000000000000000815260048101879052602481018690526001600160f81b0319831660448201527f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b03169063182b6d9890606401611433565b6000807f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970060018101546040517f7702dcff0000000000000000000000000000000000000000000000000000000081526004810188905260248101879052604481018690529192506001600160a01b031690637702dcff906064016020604051808303816000875af11580156116a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116cb91906119bf565b95945050505050565b60008082156116e85750600160f81b6116ec565b5060005b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649701546040517f117b2f3800000000000000000000000000000000000000000000000000000000815260048101879052602481018690526001600160f81b0319831660448201527f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b03169063117b2f3890606401611433565b60006020808352835180602085015260005b818110156117ba5785810183015185820160400152820161179e565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146117f257600080fd5b919050565b803567ffffffffffffffff811681146117f257600080fd5b6000806040838503121561182257600080fd5b61182b836117db565b9150611839602084016117f7565b90509250929050565b60008060006060848603121561185757600080fd5b611860846117db565b925061186e602085016117db565b915061187c604085016117f7565b90509250925092565b60006020828403121561189757600080fd5b611153826117db565b6000602082840312156118b257600080fd5b611153826117f7565b600181811c908216806118cf57607f821691505b6020821081036118ef57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b67ffffffffffffffff82811682821603908082111561192c5761192c6118f5565b5092915050565b67ffffffffffffffff81811683821601908082111561192c5761192c6118f5565b808202811582820484141761041d5761041d6118f5565b60008261198857634e487b7160e01b600052601260045260246000fd5b500490565b82815260408101605483106119b257634e487b7160e01b600052602160045260246000fd5b8260208301529392505050565b6000602082840312156119d157600080fd5b505191905056fea2646970667358221220caf72eac2f6246a20dddf6fa73dfe61a0e9376e34ab3b66ba38f8d880196524e64736f6c63430008180033";

type GhostTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GhostTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GhostToken__factory extends ContractFactory {
  constructor(...args: GhostTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      GhostToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): GhostToken__factory {
    return super.connect(runner) as GhostToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GhostTokenInterface {
    return new Interface(_abi) as GhostTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): GhostToken {
    return new Contract(address, _abi, runner) as unknown as GhostToken;
  }
}
