/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  GhostToken,
  GhostTokenInterface,
} from "../../contracts/GhostToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "ebool",
        name: "success",
        type: "bytes32",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "ebool",
        name: "success",
        type: "bytes32",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "tokenAmount",
        type: "uint64",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c0604052600b60809081526a23b437b9ba102a37b5b2b760a91b60a0526000906200002c90826200029e565b5060408051808201909152600581526411d213d4d560da1b60208201526001906200005890826200029e565b506002805460ff191660121790553480156200007357600080fd5b50620001f162000115604080516080810182526000808252602082018190529181018290526060810191909152506040805160808101825273687820221192c5b662b25367f70076a37bc79b6c815273848b0066793bcc60346da1f49049357399b8d595602082015273a02cda4ca3a71d7c46997716f4283aa851c2881291810191909152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac606082015290565b80517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970080546001600160a01b03199081166001600160a01b039384161790915560208301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497018054831691841691909117905560408301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497028054831691841691909117905560608301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497038054909216921691909117905550565b6200036a565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200022257607f821691505b6020821081036200024357634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000299576000816000526020600020601f850160051c81016020861015620002745750805b601f850160051c820191505b81811015620002955782815560010162000280565b5050505b505050565b81516001600160401b03811115620002ba57620002ba620001f7565b620002d281620002cb84546200020d565b8462000249565b602080601f8311600181146200030a5760008415620002f15750858301515b600019600386901b1c1916600185901b17855562000295565b600085815260208120601f198616915b828110156200033b578886015182559484019460019091019084016200031a565b50858210156200035a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6114a0806200037a6000396000f3fe6080604052600436106100b55760003560e01c806370a082311161006957806395d89b411161004e57806395d89b41146101ee578063d0e30db014610203578063da1f12ab1461020b57600080fd5b806370a0823114610188578063750f0acc146101cc57600080fd5b80632ea0dfe11161009a5780632ea0dfe11461011c578063313ce5671461013c5780635d359fbd1461016857600080fd5b806306fdde03146100c15780631086a9aa146100ec57600080fd5b366100bc57005b600080fd5b3480156100cd57600080fd5b506100d6610220565b6040516100e3919061126f565b60405180910390f35b3480156100f857600080fd5b5061010c6101073660046112f2565b6102ae565b60405190151581526020016100e3565b34801561012857600080fd5b5061010c610137366004611325565b6103b5565b34801561014857600080fd5b506002546101569060ff1681565b60405160ff90911681526020016100e3565b34801561017457600080fd5b5061010c6101833660046112f2565b6106ff565b34801561019457600080fd5b506101be6101a3366004611368565b6001600160a01b031660009081526003602052604090205490565b6040519081526020016100e3565b3480156101d857600080fd5b506101ec6101e7366004611383565b6108e6565b005b3480156101fa57600080fd5b506100d6610acd565b6101ec610ada565b34801561021757600080fd5b506127116101be565b6000805461022d9061139e565b80601f01602080910402602001604051908101604052809291908181526020018280546102599061139e565b80156102a65780601f1061027b576101008083540402835291602001916102a6565b820191906000526020600020905b81548152906001019060200180831161028957829003601f168201915b505050505081565b60006001600160a01b03831661030b5760405162461bcd60e51b815260206004820152600f60248201527f496e76616c6964207370656e646572000000000000000000000000000000000060448201526064015b60405180910390fd5b600061031683610bda565b3360009081526004602090815260408083206001600160a01b0389168452909152902081905590506103488130610bf1565b506103538133610bf1565b5061035e8185610bf1565b5060405167ffffffffffffffff841681526001600160a01b0385169033907f16304dfea7f3fbabcf59225f0629cb307fecb8d5652b069080aa9be2c765d7d29060200160405180910390a360019150505b92915050565b6000808267ffffffffffffffff16116104105760405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f7369746976650000000000000000006044820152606401610302565b6001600160a01b0383166104665760405162461bcd60e51b815260206004820152601160248201527f496e76616c696420726563697069656e740000000000000000000000000000006044820152606401610302565b6001600160a01b0384166104bc5760405162461bcd60e51b815260206004820152600e60248201527f496e76616c69642073656e6465720000000000000000000000000000000000006044820152606401610302565b60006104c783610bda565b6001600160a01b0386166000908152600360209081526040808320546004835281842033855290925282205492935091906105028385610c04565b905060006105108386610c04565b9050600061051e8383610c3d565b9050600061053682610530888a610c6f565b88610ca1565b6001600160a01b038b1660009081526003602052604081205491925090610581908490610563908b610cb6565b6001600160a01b038e16600090815260036020526040902054610ca1565b9050600061059984610593898c610c6f565b89610ca1565b905082600360008f6001600160a01b03166001600160a01b031681526020019081526020016000208190555081600360008e6001600160a01b03166001600160a01b031681526020019081526020016000208190555080600460008f6001600160a01b03166001600160a01b031681526020019081526020016000206000336001600160a01b03166001600160a01b03168152602001908152602001600020819055506106468330610bf1565b50610651838e610bf1565b5061065c8230610bf1565b50610667828d610bf1565b506106728130610bf1565b5061067d818e610bf1565b506106888133610bf1565b50610693848e610bf1565b5061069e8433610bf1565b508b6001600160a01b03168d6001600160a01b03167f8d61cf26ce654b1352bb60df9f3d4056b9e85a63977debf8fc9cd727aeda767e866040516106e491815260200190565b60405180910390a35060019c9b505050505050505050505050565b6000808267ffffffffffffffff161161075a5760405162461bcd60e51b815260206004820152601760248201527f416d6f756e74206d75737420626520706f7369746976650000000000000000006044820152606401610302565b6001600160a01b0383166107b05760405162461bcd60e51b815260206004820152601160248201527f496e76616c696420726563697069656e740000000000000000000000000000006044820152606401610302565b60006107bb83610bda565b336000908152600360205260408120549192506107d88284610c04565b905060006107f0826107ea8587610c6f565b85610ca1565b6001600160a01b0388166000908152600360205260408120549192509061083b90849061081d9088610cb6565b6001600160a01b038b16600090815260036020526040902054610ca1565b336000908152600360205260408082208590556001600160a01b038b1682529020819055905061086b8230610bf1565b506108768233610bf1565b506108818130610bf1565b5061088c8189610bf1565b506108978333610bf1565b506040518381526001600160a01b0389169033907f8d61cf26ce654b1352bb60df9f3d4056b9e85a63977debf8fc9cd727aeda767e9060200160405180910390a3506001979650505050505050565b60008167ffffffffffffffff16116109405760405162461bcd60e51b815260206004820152601d60248201527f4d75737420776974686472617720706f73697469766520616d6f756e740000006044820152606401610302565b60006103e861096167ffffffffffffffff8416670de0b6b3a76400006113d8565b61096b91906113fd565b9050804710156109e35760405162461bcd60e51b815260206004820152602160248201527f496e73756666696369656e7420636f6e7472616374204554482062616c616e6360448201527f65000000000000000000000000000000000000000000000000000000000000006064820152608401610302565b60006109ee83610bda565b33600090815260036020526040812054919250610a0b8284610c04565b90506000610a1d826107ea8587610c6f565b3360009081526003602052604090208190559050610a3b8130610bf1565b50610a468133610bf1565b50610a518233610bf1565b50604051339086156108fc029087906000818181858888f19350505050158015610a7f573d6000803e3d6000fd5b506040805167ffffffffffffffff881681526020810184905233917f806bc37112176c187cccea4249aea74827b609b5e40d595301442638bfd57367910160405180910390a2505050505050565b6001805461022d9061139e565b60003411610b2a5760405162461bcd60e51b815260206004820152600d60248201527f4d7573742073656e6420455448000000000000000000000000000000000000006044820152606401610302565b6000670de0b6b3a7640000610b41346103e86113d8565b610b4b91906113fd565b90506000610b5882610bda565b3360009081526003602052604081205491925090610b769083610cb6565b3360009081526003602052604090208190559050610b948130610bf1565b50610b9f8133610bf1565b5060405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a2505050565b60006103af8267ffffffffffffffff166005610ce8565b6000610bfd8383610dba565b5090919050565b600082610c1857610c156000610bda565b92505b81610c2a57610c276000610bda565b91505b610c3683836000610e62565b9392505050565b600082610c5157610c4e6000610f63565b92505b81610c6357610c606000610f63565b91505b610c3683836000610f81565b600082610c8357610c806000610bda565b92505b81610c9557610c926000610bda565b91505b610c3683836000611039565b6000610cae8484846110f1565b949350505050565b600082610cca57610cc76000610bda565b92505b81610cdc57610cd96000610bda565b91505b610c36838360006111b7565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649701546040517f9cd07acb0000000000000000000000000000000000000000000000000000000081526000917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b0390911690639cd07acb90610d77908790879060040161141f565b6020604051808303816000875af1158015610d96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cae9190611451565b60007f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970080546040517fb9496b62000000000000000000000000000000000000000000000000000000008152600481018690526001600160a01b03858116602483015292935091169063b9496b6290604401600060405180830381600087803b158015610e4557600080fd5b505af1158015610e59573d6000803e3d6000fd5b50505050505050565b6000808215610e765750600160f81b610e7a565b5060005b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649701546040517f1391547f00000000000000000000000000000000000000000000000000000000815260048101879052602481018690526001600160f81b0319831660448201527f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b031690631391547f906064015b6020604051808303816000875af1158015610f35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f599190611451565b9695505050505050565b60006103af82610f74576000610f77565b60015b60ff166000610ce8565b6000808215610f955750600160f81b610f99565b5060005b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649701546040517fd99882d500000000000000000000000000000000000000000000000000000000815260048101879052602481018690526001600160f81b0319831660448201527f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b03169063d99882d590606401610f16565b600080821561104d5750600160f81b611051565b5060005b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649701546040517f182b6d9800000000000000000000000000000000000000000000000000000000815260048101879052602481018690526001600160f81b0319831660448201527f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b03169063182b6d9890606401610f16565b6000807f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970060018101546040517f7702dcff0000000000000000000000000000000000000000000000000000000081526004810188905260248101879052604481018690529192506001600160a01b031690637702dcff906064016020604051808303816000875af115801561118a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ae9190611451565b95945050505050565b60008082156111cb5750600160f81b6111cf565b5060005b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649701546040517f117b2f3800000000000000000000000000000000000000000000000000000000815260048101879052602481018690526001600160f81b0319831660448201527f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b03169063117b2f3890606401610f16565b60006020808352835180602085015260005b8181101561129d57858101830151858201604001528201611281565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146112d557600080fd5b919050565b803567ffffffffffffffff811681146112d557600080fd5b6000806040838503121561130557600080fd5b61130e836112be565b915061131c602084016112da565b90509250929050565b60008060006060848603121561133a57600080fd5b611343846112be565b9250611351602085016112be565b915061135f604085016112da565b90509250925092565b60006020828403121561137a57600080fd5b610c36826112be565b60006020828403121561139557600080fd5b610c36826112da565b600181811c908216806113b257607f821691505b6020821081036113d257634e487b7160e01b600052602260045260246000fd5b50919050565b80820281158282048414176103af57634e487b7160e01b600052601160045260246000fd5b60008261141a57634e487b7160e01b600052601260045260246000fd5b500490565b828152604081016054831061144457634e487b7160e01b600052602160045260246000fd5b8260208301529392505050565b60006020828403121561146357600080fd5b505191905056fea2646970667358221220e652d9689703bdc86e2775c11c013ba2483c1dfd8169104de319d317fb7243ff64736f6c63430008180033";

type GhostTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GhostTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GhostToken__factory extends ContractFactory {
  constructor(...args: GhostTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      GhostToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): GhostToken__factory {
    return super.connect(runner) as GhostToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GhostTokenInterface {
    return new Interface(_abi) as GhostTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): GhostToken {
    return new Contract(address, _abi, runner) as unknown as GhostToken;
  }
}
