/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IKMSVerifier,
  IKMSVerifierInterface,
} from "../../../../../fhevm/gateway/lib/Gateway.sol/IKMSVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "aclAddress",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "handlesList",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "decryptedResult",
        type: "bytes",
      },
      {
        internalType: "bytes[]",
        name: "signatures",
        type: "bytes[]",
      },
    ],
    name: "verifyDecryptionEIP712KMSSignatures",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IKMSVerifier__factory {
  static readonly abi = _abi;
  static createInterface(): IKMSVerifierInterface {
    return new Interface(_abi) as IKMSVerifierInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IKMSVerifier {
    return new Contract(address, _abi, runner) as unknown as IKMSVerifier;
  }
}
