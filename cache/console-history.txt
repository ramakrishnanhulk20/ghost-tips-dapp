.exit
console.log("ðŸŽ‰ TRANSFER WORKED!");
await tx.wait();
const tx = await GhostToken.transfer("0x48018aA1a362108B28Ffd2A96f2e77EB83B66CE8", 1);
// Test transfer to wallet
console.log("âœ… Deposited!");
await depositTx.wait();
const depositTx = await GhostToken.deposit({ value: ethers.parseEther("0.01") });
// Deposit
const GhostToken = await ethers.getContractAt("GhostToken", "0x9F650ecbC1e70cC4d2d16727BCF56488055ab2F8");
.exit
console.log("âœ… Transfer to wallet worked!");
await tx2.wait();
const tx2 = await GhostToken.transfer("0x48018aA1a362108B28Ffd2A96f2e77EB83B66CE8", 1);
console.log("âœ… Transfer to wallet worked!");
await testTx.wait();
const testTx = await GhostToken.transfer("0x48018aA1a362108B28Ffd2A96f2e77EB83B66CE8", 1);
console.log("âœ… Transfer to wallet worked!");
await testTx.wait();
console.log("To balance:", toBal.toString());
const toBal = await GhostToken.balanceOf("0x21885E8E6B3e1F27B4c959D3FFC429Ef479D14A0");
// Check if balances[to] exists
console.log("âœ… Transfer worked!");
await testTx.wait();
const testTx = await GhostToken.transfer("0x21885E8E6B3e1F27B4c959D3FFC429Ef479D14A0", 1);
// Test transfer
console.log("âœ… Approved!");
await approveTx.wait();
const approveTx = await GhostToken.approve("0x21885E8E6B3e1F27B4c959D3FFC429Ef479D14A0", 1000);
// Approve GhostTips
console.log("âœ… Deposited!");
await depositTx.wait();
const depositTx = await GhostToken.deposit({ value: ethers.parseEther("0.01") });
// Deposit 0.01 ETH
const GhostToken = await ethers.getContractAt("GhostToken", "0xd1fF255fe6EDd0b0D9079Fc603aE7B34e4aE4B63");
.exit
console.log("Success!");
await tx3.wait();
const tx3 = await GhostToken.transfer("0x0bbb680C96cd7C8585b78ab8bFf6F19579C60d58", 1, {gasLimit: 500000});
console.log("Transfer worked!");
await tx2.wait();
const tx2 = await GhostToken.transfer("0x0bbb680C96cd7C8585b78ab8bFf6F19579C60d58", 1);
// Try transfer again
console.log("New Balance:", newBal.toString());
const newBal = await GhostToken.balanceOf("0x7E65E527Cbee544910EaF956b047479B0653b474");
// Check balance again
console.log("Deposited!");
await depositTx.wait();
const depositTx = await GhostToken.deposit({ value: ethers.parseEther("0.01") });
// Deposit 0.01 ETH to get 10 GHOST tokens
console.log("Direct transfer worked!");
await tx.wait();
const tx = await GhostToken.transfer("0x0bbb680C96cd7C8585b78ab8bFf6F19579C60d58", 1);
// Try to transfer directly to GhostTips to test
console.log("Encrypted Balance:", balance.toString());
const balance = await GhostToken.balanceOf("0x7E65E527Cbee544910EaF956b047479B0653b474");
// Check your balance (it's encrypted, but we'll see something)
const GhostTips = await ethers.getContractAt("GhostTipsFHEVM", "0x0bbb680C96cd7C8585b78ab8bFf6F19579C60d58");
const GhostToken = await ethers.getContractAt("GhostToken", "0x9425844a8F9938aEF65f82b6437286391D5aCa45");
console.log("Approved!");
await tx.wait();
const tx = await GhostToken.approve("0x0bbb680C96cd7C8585b78ab8bFf6F19579C60d58", 1000);
console.log("Balance:", balance.toString());
const balance = await GhostToken.balanceOf("0x7E65E527Cbee544910EaF956b047479B0653b474");
const GhostToken = await ethers.getContractAt("GhostToken", "0x9425844a8F9938aEF65f82b6437286391D5aCa45");
.exit
console.log("Allowance:", allowance.toString());
const allowance = await GhostToken.allowance("0x7E65E527Cbee544910EaF956b047479B0653b474", "0xdc3d48964Bd43E57d0Ea1425B1CD85fA28E94090");
console.log("Balance:", balance.toString());
const balance = await GhostToken.balanceOf("0x7E65E527Cbee544910EaF956b047479B0653b474");
const GhostToken = await ethers.getContractAt("GhostToken", "0x91b7104b8508d4f677ea22577B01e98393d3Db95");
.exit
const GhostTips = await ethers.getContractFactory("GhostTips")
console.log("Functions:", iface.fragments.filter(f => f.type === 'function').map(f => f.name))
const iface = contract.interface
const contract = GhostTips.attach("0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0")
const GhostTips = await ethers.getContractFactory("GhostTips")
await ethers.provider.getCode("0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0")
.exit
count
const count = await contract.getTipJarCount()
const contract = GhostTips.attach("0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0")
const GhostTips = await ethers.getContractFactory("GhostTips")
code
const code = await ethers.provider.getCode("0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0")
.exit
await ethers.provider.getBalance("0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266")